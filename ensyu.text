練習問題 1: 基本的なコンポーネントの作成
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は Greeting とする。
名前を受け取り、「Hello, [名前]」と表示する。
10:29
練習問題 2: 状態管理の基本
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は Counter とする。
カウンターの値を表示し、ボタンをクリックするとカウンターの値が1増える。
10:29
練習問題 3: フォームのハンドリング
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は NameForm とする。
ユーザーが名前を入力し、送信ボタンを押すと入力した名前がアラートで表示される。
10:29
練習問題 4: コンポーネントのライフサイクル
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は Timer とする。
コンポーネントがマウントされたときに毎秒カウントを1増やすタイマーを開始し、アンマウントされたときにタイマーをクリアする。
10:29
練習問題 5: コンポーネントの再利用
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は TodoList と TodoItem とする。
TodoList は配列のタスクを受け取り、各タスクを TodoItem コンポーネントとして表示する。
TodoItem はタスクを受け取り、表示する。
10:29
練習問題 6: コンポーネント間のデータ共有
問題
次の要件を満たすReactアプリケーションを作成してください：
コンポーネント名は Parent と Child とする。
Parent コンポーネントは Child コンポーネントを含む。
Child コンポーネントはテキストボックスを持ち、その値を Parent コンポーネントに渡す。
Parent コンポーネントは受け取った値を表示する。
10:29
練習問題 7: コンテキストの利用
問題
次の要件を満たすReactアプリケーションを作成してください：
テーマ（light または dark）を持つコンテキストを作成する。
ThemeProvider コンポーネントを作成し、テーマを提供する。
ThemedButton コンポーネントを作成し、テーマに応じてスタイルを変更する。
10:29
練習問題 8: APIの利用
問題
次の要件を満たすReactアプリケーションを作成してください：
UserList コンポーネントを作成し、外部API (https://jsonplaceholder.typicode.com/users) からユーザーリストを取得して表示する。
useEffect フックを使ってコンポーネントのマウント時にデータを取得する。
10:29
練習問題 9: カスタムフックの作成
問題
次の要件を満たすカスタムフックを作成してください：
useFetch フックを作成し、URL (https://jsonplaceholder.typicode.com/users) を引数として受け取る。
データをフェッチし、そのデータとローディングステータスを返す。
（編集済み）
10:30
練習問題 10: 状態のリフトアップ
問題
次の要件を満たすReactアプリケーションを作成してください：
TemperatureInput コンポーネントを作成し、摂氏または華氏の温度を入力できるようにする。
Calculator コンポーネントを作成し、摂氏または華氏を入力できる2つの TemperatureInput コンポーネントを表示し、温度を相互に変換する。
New
10:30
練習問題 11: 非同期データ取得とエラーハンドリング
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は DataFetcher とする。
外部APIからデータを取得し、成功時にはデータを表示し、エラー時にはエラーメッセージを表示する。
ローディング中には「Loading...」と表示する。
10:30
練習問題 12: リストのフィルタリング
問題
次の要件を満たすReactコンポーネントを作成してください：
コンポーネント名は FilterableList とする。
配列のアイテムを受け取り、テキストボックスに入力されたフィルター条件に一致するアイテムのみを表示する。
10:30
練習問題 13: モーダルダイアログ
問題
次の要件を満たすReactアプリケーションを作成してください：
Modal コンポーネントを作成し、モーダルダイアログを表示する。
App コンポーネントにボタンを配置し、クリックするとモーダルダイアログを開く。
10:30
練習問題 14: ルーティング
問題
次の要件を満たすReactアプリケーションを作成してください：
React Routerを使用して複数のページを作成する。
Home、About、Contact の3つのページを作成し、ナビゲーションリンクでページ間を移動できるようにする。
（編集済み）